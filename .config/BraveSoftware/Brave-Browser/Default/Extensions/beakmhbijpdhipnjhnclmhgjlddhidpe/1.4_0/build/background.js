!function(){"use strict";function t(t){if("undefined"!=typeof chrome&&chrome.storage){return chrome.storage.local.get([t]).then((e=>e[t]))}return Promise.resolve(localStorage.getItem(t))}class e{constructor(t){this.configuration=t}async saveBookmark(t){const e=this.configuration;return fetch(`${e.baseUrl}/api/bookmarks/`,{method:"POST",headers:{Authorization:`Token ${e.token}`,"Content-Type":"application/json"},body:JSON.stringify(t)}).then((t=>201===t.status?t.json():400===t.status?t.json().then((t=>Promise.reject(`Validation error: ${JSON.stringify(t)}`))):Promise.reject(`Request error: ${t.statusText}`)))}async getTags(){const t=this.configuration;return fetch(`${t.baseUrl}/api/tags/?limit=1000`,{headers:{Authorization:`Token ${t.token}`}}).then((t=>200===t.status?t.json().then((t=>t.results)):Promise.reject(`Error loading tags: ${t.statusText}`)))}async search(t,e){const n=this.configuration,o=encodeURIComponent(t),r=e.limit||100;return fetch(`${n.baseUrl}/api/bookmarks/?q=${o}&limit=${r}`,{headers:{Authorization:`Token ${n.token}`}}).then((t=>200===t.status?t.json().then((t=>t.results)):Promise.reject(`Error searching bookmarks: ${t.statusText}`)))}async testConnection(){const t=this.configuration;return fetch(`${t.baseUrl}/api/bookmarks/?limit=1`,{headers:{Authorization:`Token ${t.token}`}}).then((t=>200===t.status?t.json():Promise.reject(t))).then((t=>!!t.results)).catch((()=>!1))}async findBookmarkByUrl(t){return this.search(t,{limit:1}).then((t=>t&&t.length>0?t[0]:void 0))}}const n={baseUrl:"",token:"",default_tags:""};const o="undefined"!=typeof browser?browser:chrome;let r=null,s=null,a=!1;o.omnibox.onInputStarted.addListener((async()=>{var i;s=await async function(){const e=await t("ld_ext_config"),o=e?JSON.parse(e):{};return{...n,...o}}(),a=(i=s).baseUrl&&i.token;const c=a?"Search bookmarks in linkding":"⚠️ Please configure the linkding extension first";o.omnibox.setDefaultSuggestion({description:c}),r=a?new e(s):null})),o.omnibox.onInputChanged.addListener(((t,e)=>{r&&r.search(t,{limit:5}).then((t=>{const n=t.map((t=>({content:t.url,description:t.title||t.website_title||t.url})));e(n)})).catch((t=>{console.error(t)}))})),o.omnibox.onInputEntered.addListener(((t,e)=>{if(!a||!t)return;const n=/^http(s)?:\/\//.test(t)?t:`${s.baseUrl}/bookmarks?q=${encodeURIComponent(t)}`;switch(e){case"currentTab":o.tabs.update({url:n});break;case"newForegroundTab":o.tabs.create({url:n});break;case"newBackgroundTab":o.tabs.create({url:n,active:!1})}}))}();
//# sourceMappingURL=background.js.map
