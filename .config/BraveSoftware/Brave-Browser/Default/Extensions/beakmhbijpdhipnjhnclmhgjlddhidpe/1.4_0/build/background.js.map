{"version":3,"file":"background.js","sources":["../src/browser.js","../src/linkding.js","../src/configuration.js","../src/background.js"],"sourcesContent":["export function getBrowser() {\n  return typeof browser !== 'undefined' ? browser : chrome;\n}\n\nexport async function getCurrentTabInfo() {\n  const tabs = await getBrowser().tabs.query({active: true, currentWindow: true});\n  const tab = tabs && tabs[0];\n\n  return {\n    url: tab ? tab.url : \"\",\n    title: tab ? tab.title : \"\"\n  };\n}\n\nfunction useChromeStorage() {\n  return typeof chrome !== \"undefined\" && !!chrome.storage;\n}\n\nexport function getStorageItem(key) {\n  if (useChromeStorage()) {\n    const result = chrome.storage.local.get([key]);\n    return result.then(data => data[key])\n  } else {\n    return Promise.resolve(localStorage.getItem(key));\n  }\n}\n\nexport function setStorageItem(key, value) {\n  if (useChromeStorage()) {\n    return chrome.storage.local.set({[key]: value});\n  } else {\n    localStorage.setItem(key, value);\n    return Promise.resolve();\n  }\n}\n\nexport function openOptions() {\n  getBrowser().runtime.openOptionsPage();\n  window.close();\n}","export class LinkdingApi {\n  constructor(configuration) {\n    this.configuration = configuration;\n  }\n\n  async saveBookmark(bookmark) {\n    const configuration = this.configuration;\n\n    return fetch(`${configuration.baseUrl}/api/bookmarks/`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Token ${configuration.token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(bookmark),\n    }).then((response) => {\n      if (response.status === 201) {\n        return response.json();\n      } else if (response.status === 400) {\n        return response\n          .json()\n          .then((body) =>\n            Promise.reject(`Validation error: ${JSON.stringify(body)}`)\n          );\n      } else {\n        return Promise.reject(`Request error: ${response.statusText}`);\n      }\n    });\n  }\n\n  async getTags() {\n    const configuration = this.configuration;\n\n    return fetch(`${configuration.baseUrl}/api/tags/?limit=1000`, {\n      headers: {\n        Authorization: `Token ${configuration.token}`,\n      },\n    }).then((response) => {\n      if (response.status === 200) {\n        return response.json().then((body) => body.results);\n      }\n      return Promise.reject(`Error loading tags: ${response.statusText}`);\n    });\n  }\n\n  async search(text, options) {\n    const configuration = this.configuration;\n    const q = encodeURIComponent(text);\n    const limit = options.limit || 100;\n\n    return fetch(\n      `${configuration.baseUrl}/api/bookmarks/?q=${q}&limit=${limit}`,\n      {\n        headers: {\n          Authorization: `Token ${configuration.token}`,\n        },\n      }\n    ).then((response) => {\n      if (response.status === 200) {\n        return response.json().then((body) => body.results);\n      }\n      return Promise.reject(\n        `Error searching bookmarks: ${response.statusText}`\n      );\n    });\n  }\n\n  async testConnection() {\n    const configuration = this.configuration;\n    return fetch(`${configuration.baseUrl}/api/bookmarks/?limit=1`, {\n      headers: {\n        Authorization: `Token ${configuration.token}`,\n      },\n    })\n      .then((response) =>\n        response.status === 200 ? response.json() : Promise.reject(response)\n      )\n      .then((body) => !!body.results)\n      .catch(() => false);\n  }\n\n  async findBookmarkByUrl(url) {\n    return this.search(url, { limit: 1 }).then((results) =>\n      results && results.length > 0 ? results[0] : undefined\n    );\n  }\n}\n","import {getStorageItem, setStorageItem} from './browser';\n\nconst CONFIG_KEY = 'ld_ext_config'\nconst DEFAULTS = {\n  baseUrl: '',\n  token: '',\n  default_tags: '',\n}\n\nexport async function getConfiguration() {\n  const configJson = await getStorageItem(CONFIG_KEY)\n  const config = configJson ? JSON.parse(configJson) : {}\n  return {\n    ...DEFAULTS,\n    ...config,\n  }\n}\n\nexport async function saveConfiguration(config) {\n  const configJson = JSON.stringify(config)\n  await setStorageItem(CONFIG_KEY, configJson)\n}\n\nexport function isConfigurationComplete(config) {\n  return config.baseUrl && config.token\n}\n","import { getBrowser } from \"./browser\";\nimport { LinkdingApi } from \"./linkding\";\nimport { getConfiguration, isConfigurationComplete } from \"./configuration\";\n\nconst browser = getBrowser();\nlet api = null;\nlet configuration = null;\nlet hasCompleteConfiguration = false;\n\nbrowser.omnibox.onInputStarted.addListener(async () => {\n  configuration = await getConfiguration();\n  hasCompleteConfiguration = isConfigurationComplete(configuration);\n  const description = hasCompleteConfiguration\n    ? \"Search bookmarks in linkding\"\n    : \"⚠️ Please configure the linkding extension first\";\n\n  browser.omnibox.setDefaultSuggestion({ description });\n\n  if (hasCompleteConfiguration) {\n    api = new LinkdingApi(configuration);\n  } else {\n    api = null;\n  }\n});\n\nbrowser.omnibox.onInputChanged.addListener((text, suggest) => {\n  if (!api) {\n    return;\n  }\n\n  api\n    .search(text, { limit: 5 })\n    .then((results) => {\n      const bookmarkSuggestions = results.map((bookmark) => ({\n        content: bookmark.url,\n        description: bookmark.title || bookmark.website_title || bookmark.url,\n      }));\n      suggest(bookmarkSuggestions);\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n});\n\nbrowser.omnibox.onInputEntered.addListener((content, disposition) => {\n  if (!hasCompleteConfiguration || !content) {\n    return;\n  }\n\n  const isUrl = /^http(s)?:\\/\\//.test(content);\n  const url = isUrl\n    ? content\n    : `${configuration.baseUrl}/bookmarks?q=${encodeURIComponent(content)}`;\n\n  switch (disposition) {\n    case \"currentTab\":\n      browser.tabs.update({ url });\n      break;\n    case \"newForegroundTab\":\n      browser.tabs.create({ url });\n      break;\n    case \"newBackgroundTab\":\n      browser.tabs.create({ url, active: false });\n      break;\n  }\n});\n"],"names":["getStorageItem","key","chrome","storage","local","get","then","data","Promise","resolve","localStorage","getItem","LinkdingApi","[object Object]","configuration","this","bookmark","fetch","baseUrl","method","headers","Authorization","token","Content-Type","body","JSON","stringify","response","status","json","reject","statusText","results","text","options","q","encodeURIComponent","limit","catch","url","search","length","undefined","DEFAULTS","default_tags","browser","api","hasCompleteConfiguration","omnibox","onInputStarted","addListener","async","config","configJson","parse","getConfiguration","description","setDefaultSuggestion","onInputChanged","suggest","bookmarkSuggestions","map","content","title","website_title","error","console","onInputEntered","disposition","test","tabs","update","create","active"],"mappings":"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"}