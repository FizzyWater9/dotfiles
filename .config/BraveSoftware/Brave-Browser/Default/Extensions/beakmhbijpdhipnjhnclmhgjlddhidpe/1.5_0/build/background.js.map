{"version":3,"file":"background.js","sources":["../src/browser.js","../src/configuration.js","../src/linkding.js","../src/cache.js","../src/background.js"],"sourcesContent":["export function getBrowser() {\n  return typeof browser !== 'undefined' ? browser : chrome;\n}\n\nexport async function getCurrentTabInfo() {\n  const tabs = await getBrowser().tabs.query({active: true, currentWindow: true});\n  const tab = tabs && tabs[0];\n\n  return {\n    url: tab ? tab.url : \"\",\n    title: tab ? tab.title : \"\"\n  };\n}\n\nfunction useChromeStorage() {\n  return typeof chrome !== \"undefined\" && !!chrome.storage;\n}\n\nexport function getStorageItem(key) {\n  if (useChromeStorage()) {\n    const result = chrome.storage.local.get([key]);\n    return result.then(data => data[key])\n  } else {\n    return Promise.resolve(localStorage.getItem(key));\n  }\n}\n\nexport function setStorageItem(key, value) {\n  if (useChromeStorage()) {\n    return chrome.storage.local.set({[key]: value});\n  } else {\n    localStorage.setItem(key, value);\n    return Promise.resolve();\n  }\n}\n\nexport function openOptions() {\n  getBrowser().runtime.openOptionsPage();\n  window.close();\n}","import { getStorageItem, setStorageItem } from \"./browser\";\n\nconst CONFIG_KEY = \"ld_ext_config\";\nconst DEFAULTS = {\n  baseUrl: \"\",\n  token: \"\",\n  default_tags: \"\",\n};\n\nexport async function getConfiguration() {\n  const configJson = await getStorageItem(CONFIG_KEY);\n  const config = configJson ? JSON.parse(configJson) : {};\n  return {\n    ...DEFAULTS,\n    ...config,\n  };\n}\n\nexport async function saveConfiguration(config) {\n  const configJson = JSON.stringify(config);\n  await setStorageItem(CONFIG_KEY, configJson);\n}\n\nexport function isConfigurationComplete(config) {\n  return config.baseUrl && config.token;\n}\n","export class LinkdingApi {\n  constructor(configuration) {\n    this.configuration = configuration;\n  }\n\n  async getBookmark(bookmarkId) {\n    const configuration = this.configuration;\n\n    return fetch(\n      `${configuration.baseUrl}/api/bookmarks/${bookmarkId}/`,\n      {\n        headers: {\n          Authorization: `Token ${configuration.token}`,\n        },\n      }\n    ).then((response) => {\n      if (response.status === 200) {\n        return response.json();\n      }\n      return Promise.reject(\n        `Error retrieving bookmark: ${response.statusText}`\n      );\n    });\n  }\n\n  async saveBookmark(bookmark) {\n    const configuration = this.configuration;\n\n    return fetch(`${configuration.baseUrl}/api/bookmarks/`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Token ${configuration.token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(bookmark),\n    }).then((response) => {\n      if (response.status === 201) {\n        return response.json();\n      } else if (response.status === 400) {\n        return response\n          .json()\n          .then((body) =>\n            Promise.reject(`Validation error: ${JSON.stringify(body)}`)\n          );\n      } else {\n        return Promise.reject(`Request error: ${response.statusText}`);\n      }\n    });\n  }\n\n  async getTags() {\n    const configuration = this.configuration;\n\n    return fetch(`${configuration.baseUrl}/api/tags/?limit=1000`, {\n      headers: {\n        Authorization: `Token ${configuration.token}`,\n      },\n    }).then((response) => {\n      if (response.status === 200) {\n        return response.json().then((body) => body.results);\n      }\n      return Promise.reject(`Error loading tags: ${response.statusText}`);\n    });\n  }\n\n  async search(text, options) {\n    const configuration = this.configuration;\n    const q = encodeURIComponent(text);\n    const limit = options.limit || 100;\n\n    return fetch(\n      `${configuration.baseUrl}/api/bookmarks/?q=${q}&limit=${limit}`,\n      {\n        headers: {\n          Authorization: `Token ${configuration.token}`,\n        },\n      }\n    ).then((response) => {\n      if (response.status === 200) {\n        return response.json().then((body) => body.results);\n      }\n      return Promise.reject(\n        `Error searching bookmarks: ${response.statusText}`\n      );\n    });\n  }\n\n  async check(url) {\n    const configuration = this.configuration;\n    url = encodeURIComponent(url);\n\n    return fetch(\n      `${configuration.baseUrl}/api/bookmarks/check/?url=${url}`,\n      {\n        headers: {\n          Authorization: `Token ${configuration.token}`,\n        },\n      }\n    ).then((response) => {\n      if (response.status === 200) {\n        return response.json();\n      }\n      return Promise.reject(\n        `Error checking bookmark URL: ${response.statusText}`\n      );\n    });\n  }\n\n  async testConnection() {\n    const configuration = this.configuration;\n    return fetch(`${configuration.baseUrl}/api/bookmarks/?limit=1`, {\n      headers: {\n        Authorization: `Token ${configuration.token}`,\n      },\n    })\n      .then((response) =>\n        response.status === 200 ? response.json() : Promise.reject(response)\n      )\n      .then((body) => !!body.results)\n      .catch(() => false);\n  }\n\n  async findBookmarkByUrl(url) {\n    return this.search(url, { limit: 1 }).then((results) =>\n      results && results.length > 0 ? results[0] : undefined\n    );\n  }\n}\n","import { getStorageItem, setStorageItem } from \"./browser\";\nimport { getConfiguration, isConfigurationComplete } from \"./configuration\";\nimport { LinkdingApi } from \"./linkding\";\n\nconst TAB_METADATA_CACHE_KEY = \"ld_tab_metadata_cache\";\n\nexport async function loadTabMetadata(url) {\n  const configuration = await getConfiguration();\n  const hasCompleteConfiguration = isConfigurationComplete(configuration);\n\n  // Skip if extension is not configured or URL is invalid\n  if (!hasCompleteConfiguration || !url || !url.match(/^http(s)?:\\/\\//)) {\n    return null;\n  }\n\n  // Check for cached metadata first\n  const cachedMetadata = await getCachedTabMetadata();\n  if (cachedMetadata && cachedMetadata.metadata.url === url) {\n    return cachedMetadata;\n  }\n\n  // Load metadata if not cached\n  const api = new LinkdingApi(configuration);\n  try {\n    const tabMetadata = await api.check(url);\n    // Linkding <v1.17 does not return full bookmark data from check API\n    // In that case fetch the bookmark with a separate request\n    if (tabMetadata.bookmark && !tabMetadata.bookmark.date_added) {\n      tabMetadata.bookmark = await api.getBookmark(tabMetadata.bookmark.id);\n    }\n    await cacheTabMetadata(tabMetadata);\n    return tabMetadata;\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\nexport async function getCachedTabMetadata() {\n  const json = await getStorageItem(TAB_METADATA_CACHE_KEY);\n  return json ? JSON.parse(json) : null;\n}\n\nexport async function cacheTabMetadata(tabMetadata) {\n  const json = JSON.stringify(tabMetadata);\n  await setStorageItem(TAB_METADATA_CACHE_KEY, json);\n}\n\nexport async function clearCachedTabMetadata() {\n  await cacheTabMetadata(null);\n}\n","import { getBrowser, getCurrentTabInfo } from \"./browser\";\nimport { loadTabMetadata } from \"./cache\";\nimport { getConfiguration, isConfigurationComplete } from \"./configuration\";\nimport { LinkdingApi } from \"./linkding\";\n\nconst browser = getBrowser();\nlet api = null;\nlet configuration = null;\nlet hasCompleteConfiguration = false;\n\nasync function initApi() {\n  if (api) {\n    return true;\n  }\n\n  configuration = await getConfiguration();\n  hasCompleteConfiguration = isConfigurationComplete(configuration);\n\n  if (hasCompleteConfiguration) {\n    api = new LinkdingApi(configuration);\n  } else {\n    api = null;\n  }\n\n  return api !== null;\n}\n\n/* Omnibox / Search integration */\n\nbrowser.omnibox.onInputStarted.addListener(async () => {\n  const isReady = await initApi();\n  const description = isReady\n    ? \"Search bookmarks in linkding\"\n    : \"⚠️ Please configure the linkding extension first\";\n\n  browser.omnibox.setDefaultSuggestion({ description });\n});\n\nbrowser.omnibox.onInputChanged.addListener((text, suggest) => {\n  if (!api) {\n    return;\n  }\n\n  api\n    .search(text, { limit: 5 })\n    .then((results) => {\n      const bookmarkSuggestions = results.map((bookmark) => ({\n        content: bookmark.url,\n        description: bookmark.title || bookmark.website_title || bookmark.url,\n      }));\n      suggest(bookmarkSuggestions);\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n});\n\nbrowser.omnibox.onInputEntered.addListener((content, disposition) => {\n  if (!hasCompleteConfiguration || !content) {\n    return;\n  }\n\n  const isUrl = /^http(s)?:\\/\\//.test(content);\n  const url = isUrl\n    ? content\n    : `${configuration.baseUrl}/bookmarks?q=${encodeURIComponent(content)}`;\n\n  switch (disposition) {\n    case \"currentTab\":\n      browser.tabs.update({ url });\n      break;\n    case \"newForegroundTab\":\n      browser.tabs.create({ url });\n      break;\n    case \"newBackgroundTab\":\n      browser.tabs.create({ url, active: false });\n      break;\n  }\n});\n\n/* Precache bookmark / website metadata when tab or URL changes */\n\nbrowser.tabs.onActivated.addListener(async () => {\n  const tabInfo = await getCurrentTabInfo();\n  await loadTabMetadata(tabInfo.url);\n});\n\nbrowser.tabs.onUpdated.addListener(async (tabId, changeInfo, tab) => {\n  // Only interested in URL changes\n  // Ignore URL changes in non-active tabs\n  if (!changeInfo.url || !tab.active) {\n    return;\n  }\n\n  await loadTabMetadata(tab.url);\n});\n"],"names":["getBrowser","browser","chrome","useChromeStorage","storage","getStorageItem","key","local","get","then","data","Promise","resolve","localStorage","getItem","DEFAULTS","baseUrl","token","default_tags","async","getConfiguration","configJson","config","JSON","parse","isConfigurationComplete","LinkdingApi","[object Object]","configuration","this","bookmarkId","fetch","headers","Authorization","response","status","json","reject","statusText","bookmark","method","Content-Type","body","stringify","results","text","options","q","encodeURIComponent","limit","url","catch","search","length","undefined","TAB_METADATA_CACHE_KEY","loadTabMetadata","match","cachedMetadata","getCachedTabMetadata","metadata","api","tabMetadata","check","date_added","getBookmark","id","value","set","setItem","cacheTabMetadata","e","console","error","hasCompleteConfiguration","omnibox","onInputStarted","addListener","description","initApi","setDefaultSuggestion","onInputChanged","suggest","bookmarkSuggestions","map","content","title","website_title","onInputEntered","disposition","test","tabs","update","create","active","onActivated","tabInfo","query","currentWindow","tab","getCurrentTabInfo","onUpdated","tabId","changeInfo"],"mappings":"yBAAO,SAASA,IACd,MAA0B,oBAAZC,QAA0BA,QAAUC,OAapD,SAASC,IACP,MAAyB,oBAAXD,UAA4BA,OAAOE,QAG5C,SAASC,EAAeC,GAC7B,GAAIH,IAAoB,CAEtB,OADeD,OAAOE,QAAQG,MAAMC,IAAI,CAACF,IAC3BG,MAAKC,GAAQA,EAAKJ,KAEhC,OAAOK,QAAQC,QAAQC,aAAaC,QAAQR,ICrBhD,MACMS,EAAW,CACfC,QAAS,GACTC,MAAO,GACPC,aAAc,IAGTC,eAAeC,IACpB,MAAMC,QAAmBhB,EARR,iBASXiB,EAASD,EAAaE,KAAKC,MAAMH,GAAc,GACrD,MAAO,IACFN,KACAO,GASA,SAASG,EAAwBH,GACtC,OAAOA,EAAON,SAAWM,EAAOL,MCxB3B,MAAMS,EACXC,YAAYC,GACVC,KAAKD,cAAgBA,EAGvBD,kBAAkBG,GAChB,MAAMF,EAAgBC,KAAKD,cAE3B,OAAOG,MACL,GAAGH,EAAcZ,yBAAyBc,KAC1C,CACEE,QAAS,CACPC,cAAe,SAASL,EAAcX,WAG1CR,MAAMyB,GACkB,MAApBA,EAASC,OACJD,EAASE,OAEXzB,QAAQ0B,OACb,8BAA8BH,EAASI,gBAK7CX,mBAAmBY,GACjB,MAAMX,EAAgBC,KAAKD,cAE3B,OAAOG,MAAM,GAAGH,EAAcZ,yBAA0B,CACtDwB,OAAQ,OACRR,QAAS,CACPC,cAAe,SAASL,EAAcX,QACtCwB,eAAgB,oBAElBC,KAAMnB,KAAKoB,UAAUJ,KACpB9B,MAAMyB,GACiB,MAApBA,EAASC,OACJD,EAASE,OACa,MAApBF,EAASC,OACXD,EACJE,OACA3B,MAAMiC,GACL/B,QAAQ0B,OAAO,qBAAqBd,KAAKoB,UAAUD,QAGhD/B,QAAQ0B,OAAO,kBAAkBH,EAASI,gBAKvDX,gBACE,MAAMC,EAAgBC,KAAKD,cAE3B,OAAOG,MAAM,GAAGH,EAAcZ,+BAAgC,CAC5DgB,QAAS,CACPC,cAAe,SAASL,EAAcX,WAEvCR,MAAMyB,GACiB,MAApBA,EAASC,OACJD,EAASE,OAAO3B,MAAMiC,GAASA,EAAKE,UAEtCjC,QAAQ0B,OAAO,uBAAuBH,EAASI,gBAI1DX,aAAakB,EAAMC,GACjB,MAAMlB,EAAgBC,KAAKD,cACrBmB,EAAIC,mBAAmBH,GACvBI,EAAQH,EAAQG,OAAS,IAE/B,OAAOlB,MACL,GAAGH,EAAcZ,4BAA4B+B,WAAWE,IACxD,CACEjB,QAAS,CACPC,cAAe,SAASL,EAAcX,WAG1CR,MAAMyB,GACkB,MAApBA,EAASC,OACJD,EAASE,OAAO3B,MAAMiC,GAASA,EAAKE,UAEtCjC,QAAQ0B,OACb,8BAA8BH,EAASI,gBAK7CX,YAAYuB,GACV,MAAMtB,EAAgBC,KAAKD,cAG3B,OAFAsB,EAAMF,mBAAmBE,GAElBnB,MACL,GAAGH,EAAcZ,oCAAoCkC,IACrD,CACElB,QAAS,CACPC,cAAe,SAASL,EAAcX,WAG1CR,MAAMyB,GACkB,MAApBA,EAASC,OACJD,EAASE,OAEXzB,QAAQ0B,OACb,gCAAgCH,EAASI,gBAK/CX,uBACE,MAAMC,EAAgBC,KAAKD,cAC3B,OAAOG,MAAM,GAAGH,EAAcZ,iCAAkC,CAC9DgB,QAAS,CACPC,cAAe,SAASL,EAAcX,WAGvCR,MAAMyB,GACe,MAApBA,EAASC,OAAiBD,EAASE,OAASzB,QAAQ0B,OAAOH,KAE5DzB,MAAMiC,KAAWA,EAAKE,UACtBO,OAAM,KAAM,IAGjBxB,wBAAwBuB,GACtB,OAAOrB,KAAKuB,OAAOF,EAAK,CAAED,MAAO,IAAKxC,MAAMmC,GAC1CA,GAAWA,EAAQS,OAAS,EAAIT,EAAQ,QAAKU,KCxHnD,MAAMC,EAAyB,wBAExBpC,eAAeqC,EAAgBN,GACpC,MAAMtB,QAAsBR,IAI5B,IAHiCK,EAAwBG,KAGvBsB,IAAQA,EAAIO,MAAM,kBAClD,OAAO,KAIT,MAAMC,QAsBDvC,iBACL,MAAMiB,QAAa/B,EAAekD,GAClC,OAAOnB,EAAOb,KAAKC,MAAMY,GAAQ,KAxBJuB,GAC7B,GAAID,GAAkBA,EAAeE,SAASV,MAAQA,EACpD,OAAOQ,EAIT,MAAMG,EAAM,IAAInC,EAAYE,GAC5B,IACE,MAAMkC,QAAoBD,EAAIE,MAAMb,GAOpC,OAJIY,EAAYvB,WAAauB,EAAYvB,SAASyB,aAChDF,EAAYvB,eAAiBsB,EAAII,YAAYH,EAAYvB,SAAS2B,WAejE/C,eAAgC2C,GACrC,MAAM1B,EAAOb,KAAKoB,UAAUmB,SHjBCxD,EGkBRiD,EHlBaY,EGkBW/B,EHjBzCjC,IACKD,OAAOE,QAAQG,MAAM6D,IAAI,CAACzC,CAACrB,GAAM6D,KAExCtD,aAAawD,QAAQ/D,EAAK6D,GACnBxD,QAAQC,YALZ,IAAwBN,EAAK6D,EGG1BG,CAAiBR,GAChBA,EACP,MAAOS,GAEP,OADAC,QAAQC,MAAMF,GACP,MC7BX,MAAMtE,EAAUD,IAChB,IAAI6D,EAAM,KACNjC,EAAgB,KAChB8C,GAA2B,IAqBvBC,QAAQC,eAAeC,aAAY1D,UACzC,MACM2D,QArBR3D,iBACE,QAAI0C,IAIJjC,QAAsBR,IACtBsD,EAA2BjD,EAAwBG,GAGjDiC,EADEa,EACI,IAAIhD,EAAYE,GAEhB,KAGO,OAARiC,GAMekB,GAElB,+BACA,mDAEJ9E,EAAQ0E,QAAQK,qBAAqB,CAAEF,YAAAA,SAGjCH,QAAQM,eAAeJ,aAAY,CAAChC,EAAMqC,KAC3CrB,GAILA,EACGT,OAAOP,EAAM,CAAEI,MAAO,IACtBxC,MAAMmC,IACL,MAAMuC,EAAsBvC,EAAQwC,KAAK7C,KACvC8C,QAAS9C,EAASW,IAClB4B,YAAavC,EAAS+C,OAAS/C,EAASgD,eAAiBhD,EAASW,QAEpEgC,EAAQC,MAEThC,OAAOsB,IACND,QAAQC,MAAMA,WAIZE,QAAQa,eAAeX,aAAY,CAACQ,EAASI,KACnD,IAAKf,IAA6BW,EAChC,OAGF,MACMnC,EADQ,iBAAiBwC,KAAKL,GAEhCA,EACA,GAAGzD,EAAcZ,uBAAuBgC,mBAAmBqC,KAE/D,OAAQI,GACN,IAAK,aACHxF,EAAQ0F,KAAKC,OAAO,CAAE1C,IAAAA,IACtB,MACF,IAAK,mBACHjD,EAAQ0F,KAAKE,OAAO,CAAE3C,IAAAA,IACtB,MACF,IAAK,mBACHjD,EAAQ0F,KAAKE,OAAO,CAAE3C,IAAAA,EAAK4C,QAAQ,UAOjCH,KAAKI,YAAYlB,aAAY1D,UACnC,MAAM6E,QJ/ED7E,iBACL,MAAMwE,QAAa3F,IAAa2F,KAAKM,MAAM,CAACH,QAAQ,EAAMI,eAAe,IACnEC,EAAMR,GAAQA,EAAK,GAEzB,MAAO,CACLzC,IAAKiD,EAAMA,EAAIjD,IAAM,GACrBoC,MAAOa,EAAMA,EAAIb,MAAQ,IIyELc,SAChB5C,EAAgBwC,EAAQ9C,UAGxByC,KAAKU,UAAUxB,aAAY1D,MAAOmF,EAAOC,EAAYJ,KAGtDI,EAAWrD,KAAQiD,EAAIL,cAItBtC,EAAgB2C,EAAIjD"}